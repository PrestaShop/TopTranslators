name: 'Build application'
description: 'Build project and push to gcp registry'
inputs:
  project:
    description: "Project id (used for gcp)"
    required: false
    default: "bogamification"
  app-path:
    required: true
    description: "Application path"
  app-name:
    required: true
    description: "Application name"
  prefix-tag:
    required: false
    description: "Prefixed used in alpha for the tag image"
    default: ""
  gcp-registry:
    required: false
    description: "GCP registry name"
    default: "europe-west1-docker.pkg.dev"
  gcp-project-id:
    required: true
    description: "GCP project ID"
  gcp-credentials:
    required: true
    description: "GCP services account credentials"
  release_version:
    required: false
    description: "Release version"

runs:
  using: "composite"
  steps:
    - name: Get tag
      shell: bash
      id: get_tag
      run: echo TAG=$PREFIX_TAG$(echo $GITHUB_REF | cut -d / -f 3) >> $GITHUB_OUTPUT
      env:
        PREFIX_TAG: ${{ inputs.prefix-tag }}

    - name: Build and push image
      shell: bash
      working-directory: ${{ inputs.app-path }}
      run: |
        docker build \
          --no-cache \
          --tag="${GCLOUD_REGISTRY}/${GCLOUD_PROJECT_ID}/${PROJECT_NAME}/${PROJECT_NAME}-${APP_NAME}:latest" \
          --tag="${GCLOUD_REGISTRY}/${GCLOUD_PROJECT_ID}/${PROJECT_NAME}/${PROJECT_NAME}-${APP_NAME}:${TAG}" .
        docker push "${GCLOUD_REGISTRY}/${GCLOUD_PROJECT_ID}/${PROJECT_NAME}/${PROJECT_NAME}-${APP_NAME}:${TAG}"
        docker push "${GCLOUD_REGISTRY}/${GCLOUD_PROJECT_ID}/${PROJECT_NAME}/${PROJECT_NAME}-${APP_NAME}:latest"
      env:
        GCLOUD_REGISTRY: ${{ inputs.gcp-registry }}
        GCLOUD_PROJECT_ID: ${{ inputs.gcp-project-id }}
        PROJECT_NAME: ${{ inputs.project }}
        RELEASE_VERSION: ${{ inputs.release_version }}
        TAG: ${{ steps.get_tag.outputs.TAG }}
        APP_NAME: ${{ inputs.app-name }}